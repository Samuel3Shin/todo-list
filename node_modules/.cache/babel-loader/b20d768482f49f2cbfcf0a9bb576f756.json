{"ast":null,"code":"var _jsxFileName = \"/Users/samuel/PycharmProjects/todo-list/src/App.js\";\nimport React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport Palette from './components/Palette';\nconst colors = ['#343a40', '#f03e3e', '#12b886', '#228ae6'];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 3;\n    this.state = {\n      input: '',\n      todos: [{\n        id: 0,\n        text: ' 리액트 소개',\n        checked: false\n      }, {\n        id: 1,\n        text: ' 리액트 소개',\n        checked: true\n      }, {\n        id: 2,\n        text: ' 리액트 소개',\n        checked: false\n      }],\n      color: '#343a40'\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.handleCreate = () => {\n      const {\n        input,\n        todos,\n        color\n      } = this.state;\n      this.setState({\n        input: '',\n        todos: todos.concat({\n          id: this.id++,\n          text: input,\n          checked: false\n        })\n      });\n    };\n\n    this.handleKeyPress = e => {\n      if (e.key === 'Enter') {\n        this.handleCreate();\n      }\n    };\n\n    this.handleToggle = id => {\n      const {\n        todos\n      } = this.state;\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index];\n      const nextTodos = [...todos];\n      nextTodos[index] = { ...selected,\n        checked: !selected.checked\n      };\n      this.setState({\n        todos: nextTodos\n      });\n    };\n\n    this.handleRemove = id => {\n      const {\n        todos\n      } = this.state;\n      this.setState({\n        todos: todos.filter(todo => todo.id !== id)\n      });\n    };\n\n    this.handleSelectColor = selectedColor => {\n      this.setState({\n        color: selectedColor\n      });\n    };\n  }\n\n  render() {\n    const {\n      input,\n      todos,\n      color\n    } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n    return /*#__PURE__*/React.createElement(TodoListTemplate, {\n      form: /*#__PURE__*/React.createElement(Form, {\n        value: input,\n        onKeyPress: handleKeyPress,\n        onChange: handleChange,\n        onCreate: handleCreate,\n        color: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }),\n      palette: /*#__PURE__*/React.createElement(Palette, {\n        colors: colors,\n        selected: color,\n        onSelect: handleSelectColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TodoItemList, {\n      todos: todos,\n      onToggle: handleToggle,\n      onRemove: handleRemove,\n      color: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/samuel/PycharmProjects/todo-list/src/App.js"],"names":["React","Component","TodoListTemplate","Form","TodoItemList","Palette","colors","App","id","state","input","todos","text","checked","color","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","nextTodos","handleRemove","filter","handleSelectColor","selectedColor","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form'\nimport TodoItemList from './components/TodoItemList';\nimport Palette from './components/Palette';\n\nconst colors = ['#343a40', '#f03e3e', '#12b886', '#228ae6'];\n\nclass App extends Component {\n  id = 3;\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: ' 리액트 소개', checked: false},\n      { id: 1, text: ' 리액트 소개', checked: true},\n      { id: 2, text: ' 리액트 소개', checked: false},\n    ],\n    color: '#343a40'\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  handleCreate = () => {\n    const {input, todos, color} = this.state;\n    this.setState( {\n      input: '',\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false\n      })\n    });\n  }\n\n  handleKeyPress = (e) => {\n    if(e.key === 'Enter') {\n      this.handleCreate();\n    }\n  }\n\n  handleToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n\n    const nextTodos = [...todos];\n\n    nextTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    };\n\n    this.setState({\n      todos: nextTodos\n    });\n  }\n\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    })\n  }\n\n  handleSelectColor = (selectedColor) => {\n    this.setState({\n      color: selectedColor\n    });\n  }\n\n\n  render() {\n    const {input, todos, color } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n\n    return (\n      <TodoListTemplate form={(\n        <Form \n          value={input}\n          onKeyPress={handleKeyPress}\n          onChange={handleChange}\n          onCreate={handleCreate}\n          color={color}\n        />\n      )}\n        palette={\n          <Palette\n            colors={colors}\n            selected={color}\n            onSelect={handleSelectColor}\n          />\n        }\n      \n      >\n        <TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove} color={color}/>\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}